{"version":3,"sources":["components/Navbar.js","components/Jumbotron.js","components/PersonCard.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Jumbotron","role","PersonCard","src","this","props","image","alt","name","age","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+PA2BeA,E,iLAvBP,OACI,6BACI,yBAAKC,UAAU,kDACX,yBAAKA,UAAU,aACX,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,iBACA,4BAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WACrDC,cAAY,kBAAkBC,gBAAc,iBAAiBC,gBAAc,QAC3EC,aAAW,qBACf,0BAAMP,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BQ,GAAG,kBACzC,wBAAIR,UAAU,sBACV,wBAAIA,UAAU,mBACV,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,kB,GAfdQ,aCiBPC,E,iLAfP,OACI,yBAAKV,UAAU,aACX,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,0BAAd,4BACA,uBAAGA,UAAU,QAAb,4SACA,uBAAGA,UAAU,QAAb,4SACA,wBAAIA,UAAU,SACd,mIAEA,uBAAGA,UAAU,yBAAyBC,KAAK,IAAIU,KAAK,UAApD,oB,GAXKF,aCkBVG,E,iLAhBP,OACI,6BACI,yBAAKZ,UAAU,oBACX,yBAAKA,UAAU,qCACX,yBAAKa,IAAKC,KAAKC,MAAMC,MAAOC,IAAI,GAAGjB,UAAU,yDAEjD,yBAAKA,UAAU,aACX,4BAAKc,KAAKC,MAAMG,MAChB,4BAAKJ,KAAKC,MAAMI,IAAhB,QACA,iJ,GAXEV,aCkBXW,E,iLAhBP,OACI,6BACI,4BAAQpB,UAAU,8CACd,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,mEACA,4D,GATVS,aC+BPY,MA1Bf,WACE,OACE,yBAAKrB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACE,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAYgB,MAAM,wBAAwBE,KAAK,iBAAiBC,IAAI,QAExE,yBAAKnB,UAAU,YACX,kBAAC,EAAD,CAAYgB,MAAM,wBAAwBE,KAAK,cAAcC,IAAI,QAErE,yBAAKnB,UAAU,YACX,kBAAC,EAAD,CAAYgB,MAAM,wBAAwBE,KAAK,eAAeC,IAAI,QAEtE,yBAAKnB,UAAU,YACX,kBAAC,EAAD,CAAYgB,MAAM,wBAAwBE,KAAK,aAAaC,IAAI,UAI9E,kBAAC,EAAD,QChBcG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.51d93126.chunk.js","sourcesContent":["import React , {Component} from 'react';\r\n\r\nclass Navbar extends  Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n                    <div className=\"container\">\r\n                        <a className=\"navbar-brand\" href=\"/\">HCL Corporate</a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                                data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"/>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item active\">\r\n                                    <a className=\"nav-link\" href=\"/\">Home</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Navbar;","import React , {Component} from 'react';\r\n\r\nclass Jumbotron extends  Component{\r\n    render() {\r\n        return(\r\n            <div className='container'>\r\n                <div className=\"jumbotron mt-4 bg-light\">\r\n                    <h1 className=\"display-4 text-primary\">Welcome to HCL Corporate</h1>\r\n                    <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias amet fugiat libero quas? Accusamus adipisci asperiores aspernatur aut corporis culpa cum dolorum earum excepturi fugiat iusto nam, possimus quod. Aspernatur consequatur culpa cumque cupiditate esse minima nostrum quis quod repellat!</p>\r\n                    <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias amet fugiat libero quas? Accusamus adipisci asperiores aspernatur aut corporis culpa cum dolorum earum excepturi fugiat iusto nam, possimus quod. Aspernatur consequatur culpa cumque cupiditate esse minima nostrum quis quod repellat!</p>\r\n                    <hr className=\"my-4\"/>\r\n                    <p>It uses utility classes for typography and spacing to space content out within the larger\r\n                        container.</p>\r\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Jumbotron;","import React , {Component} from 'react';\r\n\r\nclass PersonCard extends  Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"card text-center\">\r\n                    <div className=\"card-header bg-primary text-white\">\r\n                        <img src={this.props.image} alt='' className='img-fluid img-thumbnail rounded-circle w-50 p_image'/>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h2>{this.props.name}</h2>\r\n                        <h4>{this.props.age} yrs</h4>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Error est itaque libero omnis quibusdam voluptas!</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default PersonCard;","import React , {Component} from 'react';\r\n\r\nclass Footer extends  Component{\r\n    render() {\r\n        return(\r\n            <div>\r\n                <footer className='bg-primary text-white text-center p-3 mt-4'>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <h3>Copyright &copy; 2019 , HCL Corporate</h3>\r\n                                <h6>All Rights Reserved</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Nabar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport  PersonCard from \"./components/PersonCard\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nabar/>\n      <Jumbotron/>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <PersonCard image='../images/person1.jpg' name='Laura Williams' age='35'/>\n                </div>\n                <div className=\"col-md-3\">\n                    <PersonCard image='../images/person3.jpg' name='John Wilson' age='55'/>\n                </div>\n                <div className=\"col-md-3\">\n                    <PersonCard image='../images/person2.jpg' name='Meera Johnes' age='25'/>\n                </div>\n                <div className=\"col-md-3\">\n                    <PersonCard image='../images/person4.jpg' name='Robert Sen' age='37'/>\n                </div>\n            </div>\n        </div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}